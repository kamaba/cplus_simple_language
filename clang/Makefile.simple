# Simple Language C Implementation - 简化版Makefile
# 不依赖外部库，仅使用标准C库

CC = gcc
CFLAGS = -std=c99 -Wall -Wextra -O2 -g
INCLUDES = -I./include
LIBS = -lm

# 源文件目录
SRCDIR = src
OBJDIR = obj
BINDIR = bin

# 源文件列表
SOURCES = $(wildcard $(SRCDIR)/*.c)
OBJECTS = $(SOURCES:$(SRCDIR)/%.c=$(OBJDIR)/%.o)

# 目标可执行文件
TARGET = $(BINDIR)/simple_lang

# 默认目标
all: directories $(TARGET)

# 创建必要的目录
directories:
	@mkdir -p $(OBJDIR)
	@mkdir -p $(BINDIR)

# 链接目标文件
$(TARGET): $(OBJECTS)
	$(CC) $(OBJECTS) -o $@ $(LIBS)
	@echo "编译完成: $@"

# 编译源文件
$(OBJDIR)/%.o: $(SRCDIR)/%.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# 清理目标
clean:
	rm -rf $(OBJDIR) $(BINDIR)
	@echo "清理完成"

# 测试编译（不链接）
test-compile: directories
	@echo "测试编译源文件..."
	@for file in $(SOURCES); do \
		echo "编译 $$file..."; \
		$(CC) $(CFLAGS) $(INCLUDES) -c $$file -o $(OBJDIR)/$$(basename $$file .c).o; \
	done
	@echo "所有源文件编译成功！"

# 编译测试程序
test-basic: test-compile
	@echo "编译测试程序..."
	$(CC) $(CFLAGS) $(INCLUDES) -o test/test_basic test/test_basic.c $(OBJECTS) $(LIBS)
	@echo "测试程序编译完成: test/test_basic"

# 编译主程序（简化版）
main: test-compile
	@echo "编译主程序..."
	$(CC) $(CFLAGS) $(INCLUDES) -o $(BINDIR)/main $(SRCDIR)/main.c $(OBJECTS) $(LIBS)
	@echo "主程序编译完成: $(BINDIR)/main"

# 调试版本
debug: CFLAGS += -DDEBUG -g3 -O0
debug: all

# 发布版本
release: CFLAGS += -DNDEBUG -O3
release: all

# 帮助信息
help:
	@echo "可用的目标:"
	@echo "  all           - 编译项目"
	@echo "  clean         - 清理编译文件"
	@echo "  test-compile  - 测试编译源文件"
	@echo "  test-basic    - 编译并运行基本测试"
	@echo "  main          - 编译主程序"
	@echo "  debug         - 编译调试版本"
	@echo "  release       - 编译发布版本"
	@echo "  help          - 显示此帮助信息"

# 声明伪目标
.PHONY: all clean test-compile test-basic main debug release help directories 